openapi: 3.0.0
info:
  title: ''
  version: 1.0.0
paths:
  /api/orders/create/:
    post:
      operationId: orders_create_create
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder'
          description: ''
  /api/orders/edit/{id}/:
    put:
      operationId: orders_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrder'
          description: ''
    patch:
      operationId: orders_edit_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrder'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrder'
          description: ''
  /api/orders/management/:
    get:
      operationId: orders_management_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - orders
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrdersListList'
          description: ''
  /api/orders/management/{id}/:
    put:
      operationId: orders_management_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderManagement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrderManagement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrderManagement'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderManagement'
          description: ''
    patch:
      operationId: orders_management_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this order.
        required: true
      tags:
      - orders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrderManagement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrderManagement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrderManagement'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderManagement'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/tasks/:
    get:
      operationId: tasks_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - tasks
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBaseTaskList'
          description: ''
  /api/tasks/create/:
    post:
      operationId: tasks_create_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateTask'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTask'
          description: ''
  /api/tasks/delete/{id}/:
    delete:
      operationId: tasks_delete_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/tasks/edit/{id}/:
    put:
      operationId: tasks_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditTask'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditTask'
          description: ''
    patch:
      operationId: tasks_edit_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEditTask'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEditTask'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEditTask'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditTask'
          description: ''
  /api/users/activate/{user_signed}:
    get:
      operationId: users_activate_retrieve
      parameters:
      - in: path
        name: user_signed
        schema:
          type: string
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/chat/create/:
    post:
      operationId: users_chat_create_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateChat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateChat'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChat'
          description: ''
  /api/users/chat/edit/{id}/:
    put:
      operationId: users_chat_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateChat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateChat'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChat'
          description: ''
    patch:
      operationId: users_chat_edit_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateChat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateChat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateChat'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChat'
          description: ''
  /api/users/chat/info/{id}/:
    get:
      operationId: users_chat_info_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this chat.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Chat'
          description: ''
  /api/users/chat/list/:
    get:
      operationId: users_chat_list_list
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
          description: ''
  /api/users/dashboard/:
    get:
      operationId: users_dashboard_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDashboardList'
          description: ''
  /api/users/edit/{id}/:
    get:
      operationId: users_edit_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditUser'
          description: ''
    put:
      operationId: users_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EditUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EditUser'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditUser'
          description: ''
    patch:
      operationId: users_edit_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEditUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEditUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEditUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditUser'
          description: ''
  /api/users/google-oauth2/callback-raw/:
    get:
      operationId: users_google_oauth2_callback_raw_retrieve
      tags:
      - users
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Input'
          description: ''
  /api/users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/logout/:
    post:
      operationId: users_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - users
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/users/password/change/:
    post:
      operationId: users_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/users/password/reset/:
    post:
      operationId: users_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/users/password/reset/confirm/:
    post:
      operationId: users_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/users/registration/:
    post:
      operationId: users_registration_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registration'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registration'
          description: ''
  /api/users/team/create/:
    post:
      operationId: users_team_create_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateTeam'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTeam'
          description: ''
  /api/users/team/edit/{id}/:
    put:
      operationId: users_team_edit_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateTeam'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTeam'
          description: ''
    patch:
      operationId: users_team_edit_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateTeam'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateTeam'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateTeam'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTeam'
          description: ''
  /api/users/team/info/{id}/:
    get:
      operationId: users_team_info_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this team.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
  /api/users/teams/:
    get:
      operationId: users_teams_list
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
          description: ''
  /api/users/user/:
    get:
      operationId: users_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: users_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: users_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
components:
  schemas:
    BaseTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        executor:
          type: integer
          nullable: true
        team:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        status:
          type: string
          readOnly: true
        deadline:
          type: string
          format: date
          nullable: true
      required:
      - description
      - id
      - order
      - status
      - team
      - title
    Chat:
      type: object
      properties:
        name:
          type: string
        chat_id:
          type: integer
        is_group:
          type: boolean
          default: false
        participants:
          type: string
          readOnly: true
      required:
      - name
      - participants
    CreateChat:
      type: object
      properties:
        name:
          type: string
        chat_id:
          type: integer
        is_group:
          type: boolean
          default: false
        participants:
          type: string
          readOnly: true
      required:
      - name
      - participants
    CreateOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
        deadline:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        acceptedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        accepted:
          type: boolean
          readOnly: true
        team:
          type: integer
          readOnly: true
        tasks:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        on_delete_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        action:
          type: string
      required:
      - accepted
      - acceptedAt
      - createdAt
      - deadline
      - description
      - id
      - name
      - on_delete_date
      - owner
      - tasks
      - team
      - updatedAt
    CreateTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        executor:
          type: integer
          nullable: true
        team:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        status:
          type: string
          readOnly: true
        deadline:
          type: string
          format: date
          nullable: true
      required:
      - description
      - id
      - order
      - status
      - team
      - title
    CreateTeam:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        leader:
          type: integer
        list_of_members:
          type: array
          items:
            type: integer
          writeOnly: true
        status:
          type: string
          maxLength: 11
      required:
      - id
      - list_of_members
    Dashboard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
        deadline:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        acceptedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        accepted:
          type: boolean
          readOnly: true
        team:
          type: integer
          readOnly: true
        tasks:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        on_delete_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        action:
          type: string
      required:
      - accepted
      - acceptedAt
      - createdAt
      - deadline
      - description
      - id
      - name
      - on_delete_date
      - owner
      - tasks
      - team
      - updatedAt
    EditTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        executor:
          type: string
        team:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        status:
          type: string
        deadline:
          type: string
          format: date
      required:
      - id
      - order
      - team
    EditUser:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
      required:
      - email
      - firstName
      - lastName
      - phoneNumber
      - username
    Input:
      type: object
      properties:
        code:
          type: string
        error:
          type: string
        state:
          type: string
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          writeOnly: true
        user_agent:
          type: string
      required:
      - password
      - user_agent
      - username
    OrderManagement:
      type: object
      properties:
        accepted:
          type: boolean
        team:
          type: integer
        status:
          type: string
      required:
      - accepted
      - status
      - team
    OrdersList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
        description:
          type: string
        deadline:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        acceptedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        accepted:
          type: boolean
          readOnly: true
        team:
          type: integer
          readOnly: true
        tasks:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        on_delete_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        action:
          type: string
      required:
      - accepted
      - acceptedAt
      - createdAt
      - deadline
      - description
      - id
      - name
      - on_delete_date
      - owner
      - tasks
      - team
      - updatedAt
    PaginatedBaseTaskList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/BaseTask'
    PaginatedDashboardList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Dashboard'
    PaginatedOrdersListList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrdersList'
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedEditTask:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        executor:
          type: string
        team:
          type: integer
          readOnly: true
        order:
          type: integer
          readOnly: true
        status:
          type: string
        deadline:
          type: string
          format: date
    PatchedEditUser:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
    PatchedOrderManagement:
      type: object
      properties:
        accepted:
          type: boolean
        team:
          type: integer
        status:
          type: string
    PatchedUpdateChat:
      type: object
      properties:
        name:
          type: string
        is_group:
          type: boolean
          default: false
        chat_id:
          type: integer
        participants: {}
    PatchedUpdateOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          readOnly: true
        name:
          type: string
        description:
          type: string
        deadline:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        acceptedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        accepted:
          type: boolean
          readOnly: true
        team:
          type: integer
          readOnly: true
        tasks:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        on_delete_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        action:
          type: string
    PatchedUpdateTeam:
      type: object
      properties:
        leader_id:
          type: integer
        status:
          type: string
        list_of_members:
          type: array
          items:
            type: integer
          writeOnly: true
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    Registration:
      type: object
      properties:
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        password:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        isTeamMember:
          type: boolean
          default: false
        isAdmin:
          type: boolean
          default: false
        isStaff:
          type: boolean
          default: false
      required:
      - email
      - firstName
      - lastName
      - password
      - password2
      - username
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    StatusEnum:
      enum:
      - pending
      - active
      - closed
      type: string
      description: |-
        * `pending` - Pending
        * `active` - Active
        * `closed` - Closed
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        leader:
          type: string
        list_of_members:
          type: string
          readOnly: true
        status:
          type: string
      required:
      - id
      - leader
      - list_of_members
      - status
    UpdateChat:
      type: object
      properties:
        name:
          type: string
        is_group:
          type: boolean
          default: false
        chat_id:
          type: integer
        participants: {}
    UpdateOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: integer
          readOnly: true
        name:
          type: string
        description:
          type: string
        deadline:
          type: string
          format: date
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        acceptedAt:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        accepted:
          type: boolean
          readOnly: true
        team:
          type: integer
          readOnly: true
        tasks:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        on_delete_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        action:
          type: string
      required:
      - accepted
      - acceptedAt
      - createdAt
      - id
      - on_delete_date
      - owner
      - tasks
      - team
      - updatedAt
    UpdateTeam:
      type: object
      properties:
        leader_id:
          type: integer
        status:
          type: string
        list_of_members:
          type: array
          items:
            type: integer
          writeOnly: true
      required:
      - leader_id
      - list_of_members
      - status
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
